#!/usr/bin/env ruby
# encoding: UTF-8

#-$a. ------------------ .a$ ---------------------------- %$!, ----------------%
# `$¸   .%$$^¸$$aa.     .¸$`        .        .a$a$$.      `¸$%  $a$.        .
#-.aaa$ $$$$'- $$$$$.- $aaa. -.a%$^"$$aa -- .$$$$$'- $$a. $aaa. `$,$ ----------%
#;$$$$',a$a$  d$%$$$$$,'$$$$;$$$$$  $$$$$., $$%$$"  d$a$$ '$$$$; $$$   .a%$  $$a
#:$$$$;$$$$%; Z$$$$$$$$;$$$$:$$$$$. $$$$^$,;$$&$$   Z$$$$,;$$$$.a$$$a..$$$   $$$
#.$$$$ `$$$$.  $$$%$$$' $$$$.`$$$$  $$%$$$$ `$$$$.   $%$$$ $$$$""$$$" $$$$:  a$$
# `$$$a.$$%$   $$$$$$';a$$$`  `¸$$aa$$$$&$': `$$$$a. $$$$'a$$$`.$$'$  $$$$;  $$$
#%-----.------ $$$$'--------------- $$%$$' -- `¸$$$$$%$¸' ---- $$¸$a. `"$&$$#$%$
#dz      .   .:'¸'     .        .   $$$$'     .        .       `¸$$$$y.     `$$&
#%--------- a`-----------.--------- $$¸' -----.------------.---------------- $$$
#   .      !a    . .    .      .   .:'   .  .                  .        .:.a$$$¸
#.      .  '$a,          .        a` .   'a          .   .             s` .  . .
#      .    ¸$Aa         .       !a       a!      .    .         ..   %s      .s
#   .         ¸¸'     . .        '$$Aa.aA$$'        . .               `!$%a.a%#$
#==============================================================================
#   t h e    i n i q u i t y    b u l l e t i n    b o a r d    s y s t e m
#==============================================================================

trap("INT") {exit}

SYSTEM = ENV["INIQUITY_SYSTEM"] || Dir.pwd
ENV["INIQUITY_SYSTEM"] = SYSTEM

require "inifile"
require "thin"
require "socksify"

class Telnet < EM::Connection

    def initialize
        super
        send_data "\nIniquity BBS 0.0.14 - Telnet/UTF_8\n"
    end

    def post_init

        puts "iniquity - Someone connected to Iniquity..."

        #IO.readlines("./modules/welcome.ans").each do |line|
        #    send_data line.force_encoding(Encoding::IBM437).encode(Encoding::UTF_8)
        #end

        #def wrap(s, width=78)
        #    s.gsub(/(.{1,#{width}})(\s+|\Z)/, "\\1\n")
        #end

        #send_data wrap("Eu duis consequat laborum sunt incididunt deserunt dolor nisi eu occaecat commodo ad. Reprehenderit aute laboris Lorem ex cillum ipsum laborum irure excepteur sint do pariatur Lorem sit. Aliqua ipsum dolor quis ea. Tempor non ipsum consequat proident fugiat ad id laboris aliquip amet magna.\n", 78)
    end

    def receive_data data
        #send_data ">>>you sent: #{data}"
        close_connection if data =~ /quit|q|goodbye|g|logoff|l/i
    end

    def unbind
        puts "iniquity - Someone disconnected from Iniquity..."
    end
end

class Rest < EM::Connection
    def initialize
        super
    end
    def post_init
    end
    def receive_data
    end
    def unbind
    end
end

### Iniquity Bulletin Board System

puts "\niniquity - The Iniquity Bulletin Board System.\n\n"

# If "init" passed...
if ARGV[0] && ARGV[0] == "init"
    new_system_file = File.new(SYSTEM + "/iniquity.ini", "w")
    new_system_file.puts "[profile]\nname=NewBBS\n"
    new_system_file.puts "\n[ipm]\nsources=iniquitybbs\n"
    new_system_file.puts "\n[telnet]\nenabled=yes\n"
    new_system_file.puts "port=3023\n"
    new_system_file.puts "\n[rest]\nenabled=yes\n"
    new_system_file.puts "port=3080\n"
    new_system_file.close
    abort "iniquity - Initialized directory as a new Iniquity BBS.\n\n"
end

if File.exists?(SYSTEM + "/iniquity.ini")
    CONFIG = IniFile.load(SYSTEM+ "/iniquity.ini")
else
    abort "iniquity - An Iniquity system must have an iniquity.ini file.\n\n"
end

if CONFIG["tor"]["enabled"] == "yes"
    TCPSocket::socks_server = CONFIG["tor"]["address"]
    TCPSocket::socks_port = CONFIG["tor"]["port"]
end

EM.run do

    ### Events

    EM.add_periodic_timer(15) do
        puts "iniquity - Event running, nothing to see here..."
    end

    ### Services

    CONFIG.each_section do |section|

        if section == "telnet"
            if CONFIG[section]["enabled"] == "yes"
                EM.start_server "0.0.0.0", CONFIG[section]["port"], Telnet
            end
        end

        if section == "rest"
            if CONFIG[section]["enabled"] == "yes"
                EM.start_server "0.0.0.0", CONFIG[section]["port"], Rest
            end
        end
    end
end
